{"version":3,"sources":["components/TodoList/useInput.js","components/TodoList/useTodos.js","components/TodoList/TodosBlock.js","img/LOGO.png","components/TodoList/TodoList.js","index.js"],"names":["useInput","useState","value","setValue","handleInputChange","e","target","useTodos","id","useRef","filter","setFilter","todoData","window","localStorage","getItem","JSON","parse","length","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","handleButtonClick","trim","content","isDone","handleCheckBoxChange","map","todo","handleButtonKeyDown","keyCode","handleDeleteTodo","showAllTodo","showDoneTodo","showUnfinishTodo","clearAll","TodoInput","styled","section","Button","button","Todos","div","TodoItem","Filter","TodoFilter","className","onClick","Todo","data-todo-id","type","onChange","checked","TodosBlock","placeholder","onKeyDown","TodoWrap","TodoBanner","Footer","footer","TodoFooter","src","logo","alt","TodoHeader","TodoList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47404a20.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    handleInputChange,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport useInput from \"./useInput\";\r\n\r\nconst writeTodosToLocalStorage = (todos) => {\r\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n};\r\n\r\nconst useTodos = () => {\r\n  const id = useRef(1);\r\n  const { value, setValue, handleInputChange } = useInput();\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const [todos, setTodos] = useState(() => {\r\n    let todoData = window.localStorage.getItem(\"todos\") || \"\";\r\n    todoData = JSON.parse(todoData);\r\n    if (todoData && todoData.length !== 0) {\r\n      id.current = todoData[0].id + 1;\r\n    } else {\r\n      todoData = [];\r\n    }\r\n    return todoData;\r\n  });\r\n\r\n  useEffect(() => {\r\n    writeTodosToLocalStorage(todos);\r\n  }, [todos]);\r\n\r\n  const showAllTodo = () => setFilter(\"\");\r\n  const showDoneTodo = () => setFilter(\"done\");\r\n  const showUnfinishTodo = () => setFilter(\"unfinish\");\r\n  const clearAll = () => setTodos([]);\r\n\r\n  const handleCheckBoxChange = (id) => {\r\n    return () => {\r\n      setTodos(\r\n        todos.map((todo) => {\r\n          if (todo.id !== id) return todo;\r\n          return {\r\n            ...todo,\r\n            isDone: !todo.isDone,\r\n          };\r\n        })\r\n      );\r\n    };\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    if (value.trim() !== \"\") {\r\n      setTodos([\r\n        {\r\n          id: id.current,\r\n          content: value,\r\n          isDone: false,\r\n        },\r\n        ...todos,\r\n      ]);\r\n      setValue(\"\");\r\n      id.current++;\r\n    }\r\n  };\r\n\r\n  const handleButtonKeyDown = (e) => {\r\n    if (value.trim() !== \"\" && e.keyCode === 13) {\r\n      handleButtonClick();\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = (id) => {\r\n    return () => {\r\n      setTodos(todos.filter((todo) => todo.id !== id));\r\n    };\r\n  };\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    todos,\r\n    setTodos,\r\n    handleInputChange,\r\n    handleCheckBoxChange,\r\n    handleButtonClick,\r\n    handleButtonKeyDown,\r\n    handleDeleteTodo,\r\n    filter,\r\n    setFilter,\r\n    showAllTodo,\r\n    showDoneTodo,\r\n    showUnfinishTodo,\r\n    clearAll,\r\n  };\r\n};\r\n\r\nexport default useTodos;\r\n","import styled from \"styled-components\";\nimport useTodos from \"./useTodos\";\n\nconst TodoInput = styled.section`\n  padding: 20px;\n  min-height: 300px;\n\n  .input-todo {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 10px;\n  }\n\n  input {\n    width: 460px;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid black;\n    font-size: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0;\n  display: inline;\n  height: 35px;\n  width: 50px;\n  font-size: 20px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\nconst Todos = styled.div``;\n\nconst TodoItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 12px 0;\n  padding: 5px 10px;\n\n  label {\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    width: 480px;\n  }\n\n  input {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n\n    &:checked ~ p {\n      text-decoration: line-through;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  p {\n    margin: 0;\n    width: 440px;\n    display: block;\n    font-size: 20px;\n    word-break: break-all;\n    vertical-align: bottom;\n  }\n\n  &:hover {\n    box-shadow: 0px 0px 13px 3px rgba(0, 0, 0, 0.1);\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Filter = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 20px 30px;\n  font-size: 15px;\n\n  div,\n  .clear-all {\n    cursor: pointer;\n    border-radius: 6px;\n    padding: 4px;\n    border: 2px solid transparent;\n  }\n\n  div:hover,\n  .clear-all:hover {\n    box-shadow: 0px 0px 13px 3px rgba(0, 0, 0, 0.1);\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst TodoFilter = ({\n  showAllTodo,\n  showDoneTodo,\n  showUnfinishTodo,\n  clearAll,\n}) => {\n  return (\n    <Filter>\n      <div className=\"all\" onClick={showAllTodo}>\n        全部\n      </div>\n      <div className=\"unfinish\" onClick={showUnfinishTodo}>\n        未完成\n      </div>\n      <div className=\"done\" onClick={showDoneTodo}>\n        已完成\n      </div>\n      <div className=\"clear-all\" onClick={clearAll}>\n        清空\n      </div>\n    </Filter>\n  );\n};\n\nconst Todo = ({ todo, handleDeleteTodo, handleCheckBoxChange }) => {\n  return (\n    <TodoItem data-todo-id={todo.id}>\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={handleCheckBoxChange(todo.id)}\n          checked={todo.isDone}\n        />\n        <p>{todo.content}</p>\n      </label>\n      <Button onClick={handleDeleteTodo(todo.id)}>刪除</Button>\n    </TodoItem>\n  );\n};\n\nconst TodosBlock = () => {\n  const {\n    value,\n    todos,\n    handleInputChange,\n    handleCheckBoxChange,\n    handleButtonClick,\n    handleButtonKeyDown,\n    handleDeleteTodo,\n    filter,\n    showAllTodo,\n    showDoneTodo,\n    showUnfinishTodo,\n    clearAll,\n  } = useTodos();\n\n  return (\n    <>\n      <TodoInput>\n        <div className=\"input-todo\">\n          <input\n            type=\"text\"\n            placeholder=\"Add something todo...\"\n            value={value}\n            onChange={handleInputChange}\n            onKeyDown={handleButtonKeyDown}\n          />\n          <Button onClick={handleButtonClick}>新增</Button>\n        </div>\n        <Todos>\n          {todos\n            .filter((todo) => {\n              if (filter === \"\") return todo;\n              return filter === \"done\" ? todo.isDone : !todo.isDone;\n            })\n            .map((todo) => (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                handleCheckBoxChange={handleCheckBoxChange}\n                handleDeleteTodo={handleDeleteTodo}\n              />\n            ))}\n        </Todos>\n      </TodoInput>\n      <TodoFilter\n        showAllTodo={showAllTodo}\n        showDoneTodo={showDoneTodo}\n        showUnfinishTodo={showUnfinishTodo}\n        clearAll={clearAll}\n      />\n    </>\n  );\n};\n\nexport default TodosBlock;\n","export default __webpack_public_path__ + \"static/media/LOGO.6b8bea6d.png\";","import styled from \"styled-components\";\nimport TodosBlock from \"./TodosBlock\";\nimport logo from \"../../img/LOGO.png\";\n\nconst TodoWrap = styled.div`\n  max-width: 600px;\n  min-height: 500px;\n  border: 1px solid black;\n  border-radius: 10px;\n  margin: 100px auto;\n  overflow: hidden;\n`;\n\nconst TodoBanner = styled.div`\n  position: relative;\n  background: url(\"https://i.pinimg.com/originals/50/e8/1b/50e81b57409bbb13fc0749c3b2465fa5.gif\")\n    no-repeat center bottom;\n  background-size: cover;\n  height: 300px;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    background: rgba(0, 0, 0, 0.4);\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  h1 {\n    position: relative;\n    display: inline-block;\n    z-index: 2;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: white;\n    letter-spacing: 7px;\n    font-size: 50px;\n    font-family: auto;\n  }\n`;\n\nconst Footer = styled.footer`\n  position: relative;\n  background: url(\"https://i.pinimg.com/originals/50/e8/1b/50e81b57409bbb13fc0749c3b2465fa5.gif\")\n    no-repeat bottom;\n  height: 50px;\n  font-size: 20px;\n  font-weight: bold;\n  background-size: cover;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    background: rgba(0, 0, 0, 0.4);\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  div {\n    position: relative;\n    z-index: 2;\n    text-align: center;\n    line-height: 50px;\n    color: white;\n    font-family: auto;\n  }\n\n  img {\n    position: relative;\n    top: 7px;\n    margin-left: 15px;\n    height: 30px;\n  }\n`;\n\nconst TodoFooter = () => {\n  return (\n    <Footer>\n      <div>\n        made by small-leaf\n        <img src={logo} alt=\"logo\" />\n      </div>\n    </Footer>\n  );\n};\n\nconst TodoHeader = () => {\n  return (\n    <TodoBanner>\n      <h1>Todo List</h1>\n    </TodoBanner>\n  );\n};\n\nconst TodoList = () => {\n  return (\n    <TodoWrap>\n      <TodoHeader />\n      <TodosBlock />\n      <TodoFooter />\n    </TodoWrap>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoList from \"./components/TodoList\";\n\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\n"],"sourceRoot":""}